--| Vars

local screenW, screenH = guiGetScreenSize()
sx, sy = (screenW/1920), (screenH/1080)

function respc(value)
    return value * 1
end

--/ Ator

function aToR(X, Y, sX, sY)
    local xd = X/1920 or X
    local yd = Y/1080 or Y
    local xsd = sX/1920 or sX
    local ysd = sY/1080 or sY
    return xd * screenW, yd * screenH, xsd * screenW, ysd * screenH
end

_dxDrawCircle = dxDrawCircle
function dxDrawCircle(x, y, w, h, ...)
    local x, y, w, h = aToR(x, y, w, h)
    return _dxDrawCircle(x, y, w, h, ...)
end

_dxDrawRectangle = dxDrawRectangle
function dxDrawRectangle(x, y, w, h, ...)
    local x, y, w, h = aToR(x, y, w, h)
    return _dxDrawRectangle(x, y, w, h, ...)
end

_dxDrawText = dxDrawText
function dxDrawText(text, x, y, w, h, ...)
    local x, y, w, h = aToR(x, y, w + x, h + y)
    return _dxDrawText(text, x, y, w, h, ...)
end



local textures = { }

_dxDrawImage = dxDrawImage
function dxDrawImage(x, y, w, h, ...)
    local x, y, w, h = aToR(x, y, w, h)
    return _dxDrawImage(x, y, w, h, ...)
end

_dxDrawImageSection = dxDrawImageSection
function dxDrawImageSection(x, y, w, h, ...)
    local x, y, w, h = aToR(x, y, w, h)
    return _dxDrawImageSection(x, y, w, h, ...)
end

function isCursorOnElement (x, y, w, h)
    local x, y, w, h = aToR(x, y, w, h)
    if isCursorShowing() then
        local mx, my = getCursorPosition()
        local resx, resy = guiGetScreenSize()
        mousex, mousey = mx * resx, my * resy
        if mousex > x and mousex < x + w and mousey > y and mousey < y + h then
            return true
        else
            return false
        end
    end
end

--| SVG Rectangles

local svgRectangles = {}

function dxDrawRoundedRectangle(x, y, w, h, color, radius, post)
    if not svgRectangles[radius] then
        local Path = string.format([[
            <svg width="%s" height="%s" viewBox="0 0 %s %s" fill="none" xmlns="http://www.w3.org/2000/svg">
            <rect opacity="1" width="%s" height="%s" rx="%s" fill="#FFFFFF"/>
            </svg>
        ]], w, h, w, h, w, h, radius)
        svgRectangles[radius] = svgCreate(sx*w, sy*h, Path)
    end
    if svgRectangles[radius] then
        dxSetBlendMode("modulate_add")
        dxDrawImage(x, y, w, h, svgRectangles[radius], 0, 0, 0, color, post)
        dxSetBlendMode("blend")
    end
end

--| SVG Images

Images = {}
ImagesPath = {

}

local fonts = {}
function getFont(font, size)
    local index = font .. size

    if not fonts[index] then
        fonts[index] = dxCreateFont('assets/fonts/' .. font .. '.ttf', sx * size, false, "cleartype")
    end

    return fonts[index]
end

--| Misc

function formatNumber(number, sep)
	assert(type(tonumber(number))=="number", "Bad argument @'formatNumber' [Expected number at argument 1 got "..type(number).."]")
	assert(not sep or type(sep)=="string", "Bad argument @'formatNumber' [Expected string at argument 2 got "..type(sep).."]")
	local money = number
	for i = 1, tostring(money):len()/3 do
		money = string.gsub(money, "^(-?%d+)(%d%d%d)", "%1"..sep.."%2")
	end
	return money
end

addCommandHandler("getcamera", function(cmd)
    local x, y, z, lx, ly, lz = getCameraMatrix()

    setClipboard(x..", "..y..", "..z..", "..lx..", "..ly..", "..lz)

    outputChatBox("Posições da camera foram copiadas!")
end)

svg = {
    ['mouse-icon'] = svgCreate(24, 24, [[
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M13 1.06982V8.99982H20C20 4.91982 16.95 1.55982 13 1.06982ZM4 14.9998C4 19.4198 7.58 22.9998 12 22.9998C16.42 22.9998 20 19.4198 20 14.9998V10.9998H4V14.9998ZM11 1.06982C7.05 1.55982 4 4.91982 4 8.99982H11V1.06982Z" fill="white"/>
        </svg>
    ]]),

    ['bag-icon'] = svgCreate(36, 43, [[
        <svg width="36" height="43" viewBox="0 0 36 43" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M11.7 18.3646C11.7 16.6338 13.1112 15.2292 14.85 15.2292H21.15C22.8888 15.2292 24.3 16.6338 24.3 18.3646C24.3 18.4834 24.2526 18.5973 24.1682 18.6813C24.0838 18.7653 23.9693 18.8125 23.85 18.8125H12.15C12.0307 18.8125 11.9162 18.7653 11.8318 18.6813C11.7474 18.5973 11.7 18.4834 11.7 18.3646ZM18 3.50137e-08C15.743 -0.000193696 13.5603 0.803558 11.8469 2.2659C10.1335 3.72823 9.0023 5.75261 8.658 7.97292C6.01349 9.56996 3.82736 11.8188 2.31074 14.5021C0.794126 17.1855 -0.00174078 20.2128 2.85889e-06 23.2917V25.0833H36V23.2917C36.0017 20.2128 35.2059 17.1855 33.6893 14.5021C32.1726 11.8188 29.9865 9.56996 27.342 7.97292C26.9977 5.75261 25.8665 3.72823 24.1531 2.2659C22.4397 0.803558 20.257 -0.000193696 18 3.50137e-08ZM18 5.375C16.3566 5.375 14.7636 5.59358 13.2516 6.00567C13.793 5.25562 14.5061 4.64471 15.3318 4.22347C16.1575 3.80224 17.0721 3.58281 18 3.58333C19.9548 3.58333 21.6864 4.53829 22.7484 6.00567C21.201 5.58536 19.604 5.37325 18 5.375ZM14.85 12.5417H21.15C21.9182 12.5417 22.6789 12.6923 23.3887 12.9849C24.0985 13.2775 24.7434 13.7065 25.2866 14.2472C25.8298 14.7879 26.2607 15.4298 26.5547 16.1362C26.8487 16.8427 27 17.5999 27 18.3646C27 19.1961 26.6681 19.9937 26.0774 20.5817C25.4866 21.1697 24.6854 21.5 23.85 21.5H12.15C11.3146 21.5 10.5134 21.1697 9.92261 20.5817C9.33187 19.9937 9 19.1961 9 18.3646C9 17.5999 9.15132 16.8427 9.44531 16.1362C9.7393 15.4298 10.1702 14.7879 10.7134 14.2472C11.8105 13.1552 13.2985 12.5417 14.85 12.5417ZM9 30.9062V27.7708H2.85889e-06V35.8333C2.85889e-06 37.7341 0.758572 39.5569 2.10883 40.9009C3.45909 42.2449 5.29044 43 7.2 43H28.8C30.7096 43 32.5409 42.2449 33.8912 40.9009C35.2414 39.5569 36 37.7341 36 35.8333V27.7708H11.7V30.9062C11.7 31.2626 11.5578 31.6044 11.3046 31.8564C11.0514 32.1084 10.708 32.25 10.35 32.25C9.99196 32.25 9.64858 32.1084 9.39541 31.8564C9.14223 31.6044 9 31.2626 9 30.9062Z" fill="white"/>
        </svg>
    ]]),

    ['ilegal-icon'] = svgCreate(47, 47, [[
        <svg width="47" height="47" viewBox="0 0 47 47" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M21.2969 1.62481C13.026 2.50606 6.56355 7.99551 4.99382 15.4586C4.70007 16.8447 4.59909 19.4059 4.76433 20.8012C5.003 22.7289 5.48034 24.3996 6.25144 26.0611C6.49929 26.5844 6.70124 27.1168 6.70124 27.2361C6.70124 27.3646 6.53601 27.741 6.34323 28.0715C4.90202 30.5133 5.22331 33.5518 7.13269 35.6172C8.24343 36.8105 9.64792 37.4715 11.4012 37.6275C12.4569 37.7193 12.8975 37.8846 13.3841 38.3803C13.9807 38.9861 13.9899 39.0779 14.045 41.8686L14.0909 44.4021L14.3387 44.7693C14.5958 45.1549 15.0639 45.4395 15.4587 45.4395H15.6973V44.6041C15.6973 43.7779 15.78 43.475 16.0553 43.2639C16.294 43.0803 16.6979 43.1262 16.9366 43.374C17.1477 43.576 17.1661 43.6586 17.1661 44.5215V45.4395H18.7634H20.3606L20.3973 44.5307C20.4249 43.7137 20.4524 43.5943 20.6452 43.3832C20.9206 43.0895 21.2786 43.0711 21.6091 43.3373C21.8385 43.5209 21.8477 43.5576 21.8477 44.4848V45.4395H23.5001H25.1524V44.4848C25.1524 43.5576 25.1616 43.5209 25.3911 43.3373C25.7216 43.0711 26.0796 43.0895 26.355 43.3832C26.5477 43.5943 26.5753 43.7137 26.6028 44.5307L26.6395 45.4395H28.2368H29.8341V44.5215C29.8341 43.6586 29.8524 43.576 30.0635 43.374C30.3022 43.1262 30.7061 43.0803 30.9448 43.2639C31.2202 43.475 31.3028 43.7779 31.3028 44.6041V45.4395H31.5415C31.9362 45.4395 32.4044 45.1549 32.6614 44.7693L32.9093 44.4021L32.9551 41.8686C33.0102 39.0779 33.0194 38.9861 33.6161 38.3803C34.1026 37.8846 34.5432 37.7193 35.5989 37.6275C37.3522 37.4715 38.7567 36.8105 39.8675 35.6172C41.7768 33.5518 42.0981 30.5133 40.6569 28.0715C40.4641 27.741 40.2989 27.3646 40.2989 27.2361C40.2989 27.1168 40.5009 26.5844 40.7487 26.0611C41.8962 23.6102 42.3827 21.1959 42.2909 18.2859C42.2175 15.6881 41.7493 13.7971 40.6294 11.5205C37.9856 6.15039 32.7073 2.55196 26.2264 1.69824C25.235 1.56973 22.2241 1.52383 21.2969 1.62481ZM24.005 8.12402C24.1335 8.24336 24.2344 8.42696 24.2344 8.52793C24.2344 8.66563 24.3538 8.73906 24.7577 8.8584C25.0514 8.94102 25.4462 9.09707 25.6389 9.19805C26.9241 9.84981 27.7778 11.6123 27.126 12.2549C27.0067 12.3834 26.7956 12.4844 26.6671 12.4844C26.3458 12.4844 25.8868 12.0254 25.8868 11.7041C25.8868 10.8504 24.8403 10.1803 23.5001 10.1803C22.7382 10.1803 22.1598 10.3455 21.6917 10.7035C20.8747 11.3186 20.9389 12.3191 21.8202 12.8883C22.2884 13.1912 22.6464 13.283 23.7479 13.3932C24.7577 13.5033 25.4094 13.7145 26.0245 14.1367C27.1169 14.8895 27.5942 16.1287 27.2178 17.2486C26.9241 18.1574 25.795 19.0938 24.6751 19.3691C24.3354 19.4609 24.2344 19.5252 24.2344 19.6629C24.2344 19.9383 23.8214 20.2871 23.5001 20.2871C23.1788 20.2871 22.7657 19.9383 22.7657 19.6629C22.7657 19.5252 22.6647 19.4609 22.3343 19.3691C20.8563 19.002 19.6446 17.7168 19.6446 16.5234C19.6446 15.8992 20.2688 15.5137 20.7278 15.8533C20.9665 16.0277 21.0491 16.2022 21.1593 16.7254C21.2327 17.1109 21.7009 17.5791 22.2333 17.8178C22.9126 18.1115 24.0876 18.1115 24.7393 17.8178C26.1714 17.1844 26.2907 15.9084 24.9872 15.2107C24.6108 15.0088 24.3079 14.9262 23.6102 14.8619C22.1415 14.7242 21.3245 14.4213 20.5901 13.742C20.0485 13.2463 19.7272 12.5854 19.663 11.8785C19.6262 11.4012 19.663 11.2359 19.8741 10.7586C20.2872 9.83145 21.0858 9.19805 22.2425 8.8584C22.6464 8.73906 22.7657 8.66563 22.7657 8.52793C22.7657 8.24336 23.1696 7.89453 23.5001 7.89453C23.6745 7.89453 23.8673 7.97715 24.005 8.12402ZM12.6772 25.85C14.7243 27.2545 16.7897 28.2459 19.0479 28.9252C20.1036 29.2373 20.278 29.3199 20.5809 29.6412C21.1684 30.2654 21.251 31.0916 20.7829 31.8076C20.6085 32.0738 18.7266 33.3682 17.9372 33.7629C14.9721 35.2592 11.5298 34.0016 10.0335 30.8896C9.57448 29.9258 9.43679 29.1088 9.47351 27.5666C9.50105 26.2906 9.51023 26.2631 9.77644 25.8775C10.1344 25.3727 10.5659 25.1523 11.1717 25.1523C11.6216 25.1523 11.7225 25.1982 12.6772 25.85ZM36.8565 25.4645C37.4257 25.8959 37.545 26.2906 37.545 27.7227C37.545 29.1822 37.3981 29.9809 36.9575 30.8896C35.8835 33.1479 33.6528 34.534 31.3487 34.3963C30.1462 34.3229 29.2833 33.974 27.7227 32.9459C26.9792 32.4594 26.3091 31.9453 26.2264 31.8168C25.7307 31.0732 25.8225 30.2379 26.4743 29.5953C26.7956 29.274 26.9792 29.1914 27.7686 28.9711C29.8341 28.4111 32.0096 27.383 34.1026 25.9969L35.3878 25.134L35.9477 25.1707C36.3975 25.1982 36.5811 25.2625 36.8565 25.4645ZM23.9132 32.2299C24.1151 32.285 24.3905 32.4135 24.519 32.5053C24.8403 32.7348 27.0801 35.8191 27.227 36.2506C27.7135 37.5908 26.6395 39.1055 25.1983 39.1055C24.7026 39.1055 24.0417 38.8484 23.7112 38.5363L23.5001 38.3436L23.2981 38.5363C22.9585 38.8484 22.2975 39.1055 21.8018 39.1055C20.3606 39.1055 19.2866 37.5908 19.7731 36.2506C19.92 35.8191 22.1598 32.7348 22.4811 32.5053C22.7014 32.3492 23.2063 32.1564 23.4542 32.1381C23.5093 32.1289 23.7112 32.1748 23.9132 32.2299Z" fill="white"/>
            <path d="M10.9238 27.7962C10.9238 29.6138 11.2818 30.6327 12.2824 31.6333C13.5859 32.9368 15.5596 33.2948 17.1936 32.5146C17.9738 32.1382 19.5895 31.0183 19.6262 30.8255C19.6629 30.6327 19.617 30.6144 18.1299 30.1554C16.1562 29.5403 14.1734 28.5857 12.2365 27.3005C11.6766 26.9241 11.1441 26.6212 11.0707 26.6212C10.9422 26.6212 10.9238 26.7864 10.9238 27.7962Z" fill="white"/>
            <path d="M34.6533 27.3736C33.1203 28.4018 30.7795 29.5309 28.916 30.1459C27.6859 30.5498 27.4014 30.6783 27.4014 30.816C27.4014 31.0088 28.9344 32.092 29.8064 32.5143C31.927 33.524 34.5248 32.5877 35.5805 30.4305C35.9752 29.6135 36.0762 29.0719 36.0762 27.7133C36.0762 26.7311 36.0578 26.6209 35.9201 26.6301C35.8283 26.6301 35.2592 26.9606 34.6533 27.3736Z" fill="white"/>
            <path d="M22.2331 35.1489C21.0214 36.8288 20.9296 37.0675 21.3243 37.4346C21.7007 37.7835 22.0495 37.7008 22.6737 37.1317C23.0868 36.7553 23.2888 36.6268 23.4999 36.6268C23.711 36.6268 23.913 36.7553 24.3261 37.1317C24.9778 37.7284 25.3726 37.811 25.6939 37.3979C26.061 36.9389 26.061 36.9389 24.528 34.8092C24.0232 34.1116 23.5825 33.5975 23.4999 33.5975C23.4081 33.5975 22.8849 34.2401 22.2331 35.1489Z" fill="white"/>
        </svg>
    ]]),

    ['food-icon'] = svgCreate(43, 43, [[
        <svg width="41" height="43" viewBox="0 0 41 43" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12.9918 0.15957C12.8658 0.243554 12.6811 0.42832 12.5971 0.554296C12.4459 0.781054 12.4375 1.01621 12.4375 4.50996V8.23047H6.91973H1.41035L1.04922 8.44043C0.830859 8.56641 0.595703 8.80156 0.469727 9.01992C0.276563 9.35586 0.259766 9.45664 0.259766 10.498C0.259766 11.5395 0.276563 11.6402 0.469727 11.9762C0.595703 12.1945 0.830859 12.4297 1.04922 12.5557L1.41035 12.7656H13.6973H25.9842L26.3453 12.5557C26.5637 12.4297 26.7988 12.1945 26.9248 11.9762C27.118 11.6402 27.1348 11.5395 27.1348 10.498C27.1348 9.45664 27.118 9.35586 26.9248 9.01992C26.7988 8.80156 26.5637 8.56641 26.3453 8.44043L25.9842 8.23047H20.4748H14.957V4.50996C14.957 1.01621 14.9486 0.781054 14.7975 0.554296C14.5371 0.167968 14.218 -9.53674e-07 13.6973 -9.53674e-07C13.3865 -9.53674e-07 13.1598 0.0503902 12.9918 0.15957Z" fill="white"/>
            <path d="M2.10742 15.5539C2.10742 15.7051 2.59453 21.6764 3.19082 28.815C4.3498 42.7144 4.29102 42.1769 4.76133 42.5885C5.24004 43.0084 5.18965 43 9.59043 43C13.4621 43 13.7141 42.9916 13.6637 42.8572C13.4537 42.3281 13.3865 40.0353 13.5293 38.8848C13.6469 37.9609 14.0584 37.1883 14.7555 36.5416C15.2846 36.0629 15.3014 36.0377 15.1838 35.8445C14.6715 35.0551 14.6715 33.1402 15.1838 32.3508C15.3014 32.1576 15.2846 32.1324 14.7555 31.6537C14.0164 30.9734 13.6469 30.2344 13.5209 29.1846C13.3949 28.1683 13.4789 25.3633 13.6553 24.4814C14.2852 21.458 16.5275 19.1232 19.5762 18.3338C20.3068 18.1406 20.584 18.1238 22.734 18.0818L25.0939 18.0314L25.1443 17.4771C25.1779 17.1748 25.2199 16.5533 25.2535 16.0998L25.3123 15.2851H13.7057H2.10742V15.5539Z" fill="white"/>
            <path d="M19.9289 20.7357C18.9715 21.0129 18.3332 21.3992 17.5605 22.1719C17.0146 22.7178 16.7711 23.0369 16.5359 23.5156C16.0152 24.5822 15.9648 24.9182 15.9648 27.2613C15.9648 29.5625 15.9816 29.6297 16.5191 29.9908C16.7543 30.142 17.1406 30.1504 28.3525 30.1504C39.5645 30.1504 39.9508 30.142 40.1859 29.9908C40.7234 29.6297 40.7402 29.5625 40.7402 27.2613C40.7402 24.9182 40.6898 24.5822 40.1691 23.5156C39.7408 22.6338 38.6826 21.5756 37.8008 21.1473C36.5746 20.551 37.0113 20.5762 28.3021 20.5846C21.0123 20.5846 20.4244 20.6014 19.9289 20.7357ZM31.502 23.0789C32.1486 23.5492 32.1318 24.557 31.4684 24.9854C31.124 25.2121 30.7965 25.2709 30.4605 25.1533C29.3016 24.7502 29.3016 23.2889 30.4605 22.8857C30.8133 22.7682 31.1576 22.827 31.502 23.0789ZM21.7598 23.8348C22.4064 24.3051 22.3896 25.3129 21.7262 25.7412C21.3818 25.968 21.0543 26.0268 20.7184 25.9092C19.5594 25.5061 19.5594 24.0447 20.7184 23.6416C21.0711 23.524 21.4154 23.5828 21.7598 23.8348ZM36.373 25.3465C37.0197 25.8168 37.0029 26.8246 36.3395 27.2529C35.9951 27.4797 35.6676 27.5385 35.3316 27.4209C34.1727 27.0178 34.1727 25.5564 35.3316 25.1533C35.6844 25.0357 36.0287 25.0945 36.373 25.3465ZM26.6309 25.9344C27.2775 26.4047 27.2607 27.4125 26.5973 27.8408C26.2529 28.0676 25.9254 28.1264 25.5895 28.0088C24.4305 27.6057 24.4305 26.1443 25.5895 25.7412C25.9422 25.6236 26.2865 25.6824 26.6309 25.9344Z" fill="white"/>
            <path d="M17.8881 32.8631C17.4262 33.1738 17.2246 33.5434 17.2246 34.0977C17.2246 34.652 17.4262 35.0215 17.8881 35.3322L18.1736 35.5254H28.3525H38.5314L38.817 35.3322C39.2789 35.0215 39.4805 34.652 39.4805 34.0977C39.4805 33.5434 39.2789 33.1738 38.817 32.8631L38.5314 32.6699H28.3525H18.1736L17.8881 32.8631Z" fill="white"/>
            <path d="M16.5191 38.2045C15.9984 38.5488 15.9648 38.6748 15.9648 40.5225C15.9648 42.3701 15.9984 42.4961 16.5191 42.8404C16.7543 42.9916 17.1406 43 28.3525 43C39.5645 43 39.9508 42.9916 40.1859 42.8404C40.7066 42.4961 40.7402 42.3701 40.7402 40.5225C40.7402 38.6748 40.7066 38.5488 40.1859 38.2045C39.9508 38.0533 39.5645 38.0449 28.3525 38.0449C17.1406 38.0449 16.7543 38.0533 16.5191 38.2045Z" fill="white"/>
        </svg>
    ]])
}